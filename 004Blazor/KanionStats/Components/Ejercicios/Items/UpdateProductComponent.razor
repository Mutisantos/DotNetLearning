@using Entities
@using BusinessLayer

<EditForm Model="@thisItem">
    <div class="form-group">
        <label>
            Item Name:
        </label>
        <InputText class="form-control" @bind-Value="thisItem.ItemName"></InputText>
    </div>
    <div class="form-group">
        <label>
            Item Description:
        </label>
        <InputText @bind-Value="thisItem.ItemDescription"></InputText>
    </div>
    <div class="form-group">
        <label>
            Item Category:
        </label>
        <InputSelect @bind-Value="thisItem.CategoryId" class="form-control">
            @foreach (var loadedCategory in categories)
            {
                <option value="@loadedCategory.CategoryId">@loadedCategory.CategoryName</option>
            }
        </InputSelect>
    </div>
    <input type="button" value="Actualizar producto" @onclick="UpdateItem" />
</EditForm>


@code {
    [Parameter]
    public string itemId { get; set; }

    @inject B_Item itemListService;
    @inject B_Category categoryService;
    @inject NavigationManager NavManager;

    ItemEntity thisItem = new ItemEntity();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        categories = categoryService.CategoryList();
        thisItem = itemListService.ItemById(itemId);
    }

    private void UpdateItem()
    {
        itemListService.UpdateItem(thisItem);
        NavManager.NavigateTo("items/list");
    }
}
